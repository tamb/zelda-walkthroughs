const CACHE_NAME="zelda-walkthroughs-v1",CACHE_VERSION="1.0.0",getAssetPrefix=()=>{let e=location.pathname.match(/^(\/[^\/]+)\//);return e?e[1]:""},assetPrefix=getAssetPrefix(),SW_SCOPE=assetPrefix||"/",urlsToCache=[`${assetPrefix}/`,`${assetPrefix}/manifest.json`,`${assetPrefix}/icons/icon-192x192.svg`,`${assetPrefix}/icons/icon-512x512.svg`];self.addEventListener("install",e=>{console.log("Service Worker installing..."),e.waitUntil(caches.open(CACHE_NAME).then(e=>(console.log("Opened cache"),e.addAll(urlsToCache).catch(e=>(console.warn("Failed to cache some resources:",e),Promise.resolve()))))),self.skipWaiting()}),self.addEventListener("fetch",e=>{e.respondWith(caches.match(e.request).then(s=>s||fetch(e.request).then(s=>{if(!s||200!==s.status||"basic"!==s.type)return s;let t=s.clone();return caches.open(CACHE_NAME).then(s=>{s.put(e.request,t)}),s}).catch(()=>"document"===e.request.destination?caches.match(`${assetPrefix}/`):new Response("Offline",{status:503,statusText:"Service Unavailable"}))))}),self.addEventListener("activate",e=>{console.log("Service Worker activating..."),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return console.log("Deleting old cache:",e),caches.delete(e)}))).then(()=>self.clients.claim()))}),self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()});